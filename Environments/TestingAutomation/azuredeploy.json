{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "username": {
      "type": "string"
    },
    "password": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "allowedValues": [
        "East US",
        "West Europe"
      ],
      "defaultValue": "West Europe"
    }
  },
  "variables": {
    "vmName": "[toLower(uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.1.0.0/16",
    "subnetPrefix": "10.1.0.0/24",
    "nicName": "[concat(variables('vmname'), '-nic' )]",
    "networkSecurityGroupName": "[concat(variables('vmname'), '-nsg' )]",
    "publicIPAddressName": "[concat(variables('vmname'), '-pip' )]",
    "virtualNetworkName": "[concat(variables('vmname'), '-vnet')]",
    "subnetName": "[concat(variables('vmname'),'-subnet')]",
    "configExtensionName": "[concat(variables('vmName'), '-config')]",
    "vmSize": "Standard_D3_v2"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "presales",
      "dependsOn": [
      ],
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "parameters": {
          "username": {
            "value": "[parameters('username')]"
          },
          "password": {
            "value": "[parameters('password')]"
          },
          "conn_string": {
            "reference": {
              "keyVault": {
                "id": "[resourceId(resourceGroup().tags.Rg, 'Microsoft.KeyVault/vaults', concat(resourceGroup().tags.Env, '-kv'))]"
              },
              "secretName": "mongo-db-conn-string"
            }
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "conn_string": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "variables": {
            "vmName": "[toLower(uniqueString(resourceGroup().id))]",
            "addressPrefix": "10.1.0.0/16",
            "subnetPrefix": "10.1.0.0/24",
            "nicName": "[concat(variables('vmname'), '-nic' )]",
            "networkSecurityGroupName": "[concat(variables('vmname'), '-nsg' )]",
            "publicIPAddressName": "[concat(variables('vmname'), '-pip' )]",
            "virtualNetworkName": "[concat(variables('vmname'), '-vnet')]",
            "subnetName": "[concat(variables('vmname'),'-subnet')]",
            "configExtensionName": "[concat(variables('vmName'), '-config')]",
            "vmSize": "Standard_D3_v2"
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2018-11-01",
              "name": "[variables('publicIPAddressName')]",
              "location": "[parameters('location')]",
              "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                  "domainNameLabel": "[concat('a',toLower(uniqueString(resourceGroup().id)))]"
                }
              }
            },
            {
              "comments": "Default Network Security Group for template",
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2019-08-01",
              "name": "[variables('networkSecurityGroupName')]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "default-allow-3389",
                    "properties": {
                      "priority": 1000,
                      "access": "Allow",
                      "direction": "Inbound",
                      "destinationPortRange": "3389",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2018-11-01",
              "name": "[variables('virtualNetworkName')]",
              "location": "[parameters('location')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              ],
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[variables('addressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('subnetName')]",
                    "properties": {
                      "addressPrefix": "[variables('subnetPrefix')]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2018-11-01",
              "name": "[variables('nicName')]",
              "location": "[parameters('location')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
              ],
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                      },
                      "subnet": {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2018-10-01",
              "name": "[variables('vmName')]",
              "location": "[parameters('location')]",
              "tags": {
                "AlwaysPoweredOn": "true"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
              ],
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                  "computerName": "[variables('vmName')]",
                  "adminUsername": "[parameters('userName')]",
                  "adminPassword": "[parameters('password')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "id": "[resourceId( resourceGroup().tags.Rg, 'Microsoft.Compute/galleries/images', concat(resourceGroup().tags.Env, '_sig'), 'testing-demo' )]"
                  },
                  "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "StandardSSD_LRS"
                    }
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                    }
                  ]
                }
              },
              "resources": [
                {
                  "name": "[variables('configExtensionName')]",
                  "type": "extensions",
                  "apiVersion": "2019-03-01",
                  "location": "[parameters('location')]",
                  "dependsOn": [
                    "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
                  ],
                  "properties": {
                    "publisher": "Microsoft.Compute",
                    "type": "CustomScriptExtension",
                    "typeHandlerVersion": "1.10",
                    "settings": {
                      "fileUris": [
                        "[concat('https://raw.githubusercontent.com/AndreiBarbuOz/uipath-demo-environment/', resourceGroup().tags.Branch, '/Artifacts/testing-automation/config.py')]",
                        "[concat('https://raw.githubusercontent.com/AndreiBarbuOz/uipath-demo-environment/', resourceGroup().tags.Branch, '/Artifacts/testing-automation/orch_setup.py')]"
                      ],
                      "commandToExecute": "[concat('python ./config.py --conn_string \"', parameters('conn_string'),'\" --password \"', parameters('password'), '\"', ' --username \"', parameters('username'), '\"' ) ]"
                    }
                  }
                }
              ]
            }
          ],
          "outputs": {
            "vmUsername": {
              "value": "[parameters('username')]",
              "type": "string"
            },
            "vmPassword": {
              "value": "[parameters('password')]",
              "type": "string"
            },
            "vmFqdn": {
              "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))).dnsSettings.fqdn]",
              "type": "string"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "vmUsername": {
      "value": "[parameters('username')]",
      "type": "string"
    },
    "vmPassword": {
      "value": "[parameters('password')]",
      "type": "string"
    },
    "vmFqdn": {
      "value": "[reference('presales').outputs.vmFqdn.value]",
      "type": "string"
    }
  }
}