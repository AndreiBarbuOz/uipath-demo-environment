variables:
- group: demo-vm-deploy

trigger:
  - andrei
  - stefan

stages:
- stage: Build
  displayName: Build and Validate
  jobs:
  - job: Validate
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureResourceGroupDeployment@2
      displayName: validate lab template
      inputs:
        azureSubscription: $(testAzureConnection)
        resourceGroupName: $(testResourceGroupName)
        templateLocation: 'Linked artifact'
        csmFile: $(Build.SourcesDirectory)/lab/azuredeploy.json
        csmParametersFile: $(Build.SourcesDirectory)/lab/azuredeploy.parameters.json
        deploymentMode: 'Validation'

    - task: AzureResourceGroupDeployment@2
      displayName: validate vm template
      inputs:
        azureSubscription: $(testAzureConnection)
        resourceGroupName: $(testResourceGroupName)
        templateLocation: 'Linked artifact'
        csmFile: $(Build.SourcesDirectory)/vm/azuredeploy.json
        csmParametersFile: $(Build.SourcesDirectory)/vm/azuredeploy.parameters.json
        deploymentMode: 'Validation'

    - task: AzureResourceGroupDeployment@2
      displayName: validate env template
      inputs:
        azureSubscription: $(testAzureConnection)
        resourceGroupName: $(testResourceGroupName)
        templateLocation: 'Linked artifact'
        csmFile: $(Build.SourcesDirectory)/Environments/PresalesDemo/azuredeploy.json
        csmParametersFile: $(Build.SourcesDirectory)/Environments/PresalesDemo/presales.parameters.json
        deploymentMode: 'Validation'
    - task: AzureResourceGroupDeployment@2
      displayName: validate env template
      inputs:
        azureSubscription: $(testAzureConnection)
        resourceGroupName: $(testResourceGroupName)
        templateLocation: 'Linked artifact'
        csmFile: $(Build.SourcesDirectory)/Environments/TestingAutomation/azuredeploy.json
        csmParametersFile: $(Build.SourcesDirectory)/Environments/TestingAutomation/testing.parameters.json
        deploymentMode: 'Validation'
    - publish: $(Build.SourcesDirectory)
      artifact: drop
      displayName: Publish all sources

- stage: DeployDevUat
  displayName: Deploy dev branch to UAT
  dependsOn: Build
  condition: and( succeeded(), not( eq( variables['Build.Reason'], 'PullRequest')))
  jobs:
    - deployment: deployDevUat
      environment: uat
      pool:
        vmImage: 'ubuntu-latest'
      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: drop
              displayName: Download sources
            - task: AzureResourceGroupDeployment@2
              displayName: deploy lab to test
              inputs:
                azureSubscription: $(testAzureConnection)
                resourceGroupName: $(testResourceGroupName)
                templateLocation: 'Linked artifact'
                csmFile: $(Pipeline.Workspace)/drop/lab/azuredeploy.json
                csmParametersFile: $(Pipeline.Workspace)/drop/lab/azuredeploy.parameters.json
                deploymentMode: 'Incremental'
                overrideParameters: -tenantId $(tenantId) -objectId $(objectId) -gitToken $(githubToken) -projectName "dsftest" -project $(projectName) -owner $(ownerEmail) -artifactBranch $(Build.SourceBranchName)

- stage: DeployPrUat
  displayName: Deploy to UAT
  dependsOn: Build
  condition: and( succeeded(),eq( variables['system.pullRequest.targetBranch'], 'master'), eq( variables['Build.Reason'], 'PullRequest'))
  jobs:
    - deployment: deployPrUat
      environment: uat
      pool:
        vmImage: 'ubuntu-latest'
      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: drop
              displayName: Download sources
            - task: AzureResourceGroupDeployment@2
              displayName: deploy lab to test
              inputs:
                azureSubscription: $(testAzureConnection)
                resourceGroupName: $(testResourceGroupName)
                templateLocation: 'Linked artifact'
                csmFile: $(Pipeline.Workspace)/drop/lab/azuredeploy.json
                csmParametersFile: $(Pipeline.Workspace)/drop/lab/azuredeploy.parameters.json
                deploymentMode: 'Incremental'
                overrideParameters: -tenantId $(tenantId) -objectId $(objectId) -gitToken $(githubToken) -projectName "dsftest" -project $(projectName) -owner $(ownerEmail) -artifactBranch $(System.PullRequest.SourceBranch)


- stage: DeployProd
  displayName: Deploy to Prod
  dependsOn: DeployPrUat
  condition: and( succeeded(),eq( variables['system.pullRequest.targetBranch'], 'master'), eq( variables['Build.Reason'], 'PullRequest'))
  jobs:
    - deployment: deployProd
      environment: prod
      pool:
        vmImage: 'ubuntu-latest'
      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: drop
              displayName: Download sources
            - task: AzureResourceGroupDeployment@2
              displayName: deploy lab to test
              inputs:
                azureSubscription: $(prodAzureConnection)
                resourceGroupName: $(prodResourceGroupName)
                templateLocation: 'Linked artifact'
                csmFile: $(Pipeline.Workspace)/drop/lab/azuredeploy.json
                csmParametersFile: $(Pipeline.Workspace)/drop/lab/azuredeploy.parameters.json
                deploymentMode: 'Incremental'
                overrideParameters: -tenantId $(tenantId) -objectId $(objectId) -gitToken $(githubToken) -projectName "dsfprod" -project $(projectName) -owner $(ownerEmail)
              
